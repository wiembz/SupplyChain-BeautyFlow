{
  "name": "Erreurs dans public Fact_Stock",
  "kind": "m",
  "expression": [
    "let",
    "Source = #\"public Fact_Stock\",",
    "  #\"Incompatibilités de types détectées\" = let",
    "    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Source, Table.ColumnsOfType(Source, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),",
    "    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),",
    "    fieldNames = Record.FieldNames(recordTypeFields),",
    "    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),",
    "    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = \"Le type de la valeur ne correspond pas à celui de la colonne.\", Detail = v], fieldTypes{i}})",
    "in",
    "    Table.TransformColumns(Source, pairs),",
    "  #\"Index ajouté\" = Table.AddIndexColumn(#\"Incompatibilités de types détectées\", \"Numéro de ligne\" ,1),",
    "  #\"Conserver les erreurs\" = Table.SelectRowsWithErrors(#\"Index ajouté\", {\"QuantityInventory\", \"CapacityWarehouse\", \"Fk_Products\", \"Fk_ManufactureDate\", \"Fk_ExpiryDate\", \"FK_Inventory\", \"Fk_Warehouses\", \"Fk_Iot\", \"Temperature\", \"Humidity\"}),",
    "  #\"Colonnes permutées\" = Table.ReorderColumns(#\"Conserver les erreurs\", {\"Numéro de ligne\", \"QuantityInventory\", \"CapacityWarehouse\", \"Fk_Products\", \"Fk_ManufactureDate\", \"Fk_ExpiryDate\", \"FK_Inventory\", \"Fk_Warehouses\", \"Fk_Iot\", \"Temperature\", \"Humidity\"})",
    "in",
    "  #\"Colonnes permutées\""
  ],
  "queryGroup": "Erreurs des requêtes – 06/04/2025 04:06:49",
  "lineageTag": "341b6837-0e55-4294-8eb1-e0cc2a0f991c",
  "annotations": [
    {
      "name": "PBI_NavigationStepName",
      "value": "Navigation"
    }
  ]
}